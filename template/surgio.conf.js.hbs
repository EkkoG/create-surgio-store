'use strict';

module.exports = {
  artifacts: [
    /**
     * Surge
     */
    {
      name: 'SurgeV3.conf', // 新版 Surge
      template: 'surge_v3',
      provider: 'demo',
    },
    {
      name: 'Surge_simple.conf', // 旧版 Surge
      template: 'surge_simple',
      provider: 'subscribe_demo',
    },

    /**
     * Clash
     */
    {
      name: 'Clash.yml',
      template: 'clash',
      provider: 'subscribe_demo',
      // Clash 配置才需要定义这个方法，文档待补充
      proxyGroupModifier(nodeList, filters) {
        return [
          {
            name: '🚀 Proxy',
            type: 'select',
          },
          {
            name: '🎬 Netflix',
            filter: filters.netflixFilter,
            type: 'select',
          },
          {
            name: 'US',
            filter: filters.usFilter,
            type: 'url-test',
          },
          {
            name: 'HK',
            filter: filters.hkFilter,
            type: 'url-test',
          },
          {
            name: '🍎 Apple',
            proxies: ['DIRECT', '🚀 Proxy', 'US', 'HK'],
            type: 'select',
          },
          {
            name: '🍎 Apple CDN',
            proxies: ['DIRECT', '🍎 Apple'],
            type: 'select',
          },
        ];
      },
    },

    /**
     * Quantumult
     */
    {
      name: 'Quantumult_rules.conf',
      template: 'quantumult_rules',
      provider: 'subscribe_demo',
    },
    {
      name: 'Quantumult.conf',
      template: 'quantumult',
      provider: 'subscribe_demo',
    },
    {
      // 给 Quantumult 提供订阅地址
      name: 'Shadowsocks_subscribe.conf',
      template: 'shadowsocks_subscribe',
      provider: 'subscribe_demo',
    },
  ],
  urlBase: 'https://example.com/', // 订阅地址的前缀部分，以 / 结尾
  {{#if useAliyunOss}}
  upload: {
    prefix: '', // 默认保存至根目录，可以在此修改子目录名，以 / 结尾
    bucket: '',
    region: '',
    accessKeyId: '',
    accessKeySecret: '',
  },
  {{/if}}
};
